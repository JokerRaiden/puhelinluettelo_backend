{"version":3,"sources":["services/persons.js","components/Notification.js","components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notification","className","type","message","Person","person","handleDelete","name","number","onClick","Persons","personsToShow","map","key","Filter","newFilter","handleNewFilter","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setNotification","useEffect","personService","initialPersons","showNotification","setTimeout","filter","toLowerCase","startsWith","event","target","preventDefault","existingPerson","find","window","confirm","newPerson","returnedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8deda31e.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create,\r\n  update,\r\n  remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Person = ({person, handleDelete}) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}\r\n      <button onClick={handleDelete}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({personsToShow, handleDelete}) => {\r\n  return (\r\n    <div>\r\n      {personsToShow.map( person => \r\n      <Person key={person.name} person={person} handleDelete={() => handleDelete(person.name, person.id)} />\r\n    )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({newFilter, handleNewFilter}) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={newFilter} onChange={handleNewFilter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, newName, handleNewName, newNumber, handleNewNumber }) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNewName}/>\r\n        <br/>\r\n        number: <input value={newNumber} onChange={handleNewNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification ] = useState('')\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n  }, [])\n\n  const showNotification = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    let existingPerson = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n    if (existingPerson) {\n      if(!window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        return\n      }\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (existingPerson) {\n      personService\n        .update(existingPerson.id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            showNotification(\n              `Updated ${returnedPerson.name}`\n            )\n          })\n          .catch(error => {\n            showNotification(\n              `Information of ${existingPerson.name} has already been removed from server`, 'error'\n            )\n            setPersons(persons.filter(person => person.id !== existingPerson.id))\n          })\n    }\n    else {\n      personService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          showNotification(\n            `Added ${returnedPerson.name}`\n          )\n      })\n      .catch(error => {\n        showNotification(error.response.data.error, 'error')\n      })\n    }\n  }\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleDelete = (name, id) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService.remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        showNotification(\n          `Deleted ${name}`\n        )\n      })\n    }\n  }\n  const personsToShow = persons.filter(person => person.name.toLowerCase().startsWith(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter newFilter={newFilter} handleNewFilter={handleNewFilter} />\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} handleNewName={handleNewName} newNumber={newNumber} handleNewNumber={handleNewNumber} />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}